m +  labs( x = "Precipitation",
y = "Count",
title = "")
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 300, rate = .09))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 9)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "")
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 300, rate = .09))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "")
z <- rexp(300,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" )
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 300, rate = .09))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
#ggplot() + stat_function(aes(x = 1:20),fun=function(x){dexp( x,.65)})
ggplot() + stat_function(aes(x = 1:90),fun=dexp,geom = "line",size=1,args = (mean=.1)) + labs( x = "Precipitation",
y = "",
title = "")+theme_classic()
#ggplot() + stat_function(aes(x = 1:20),fun=function(x){dexp( x,.65)})
ggplot() + stat_function(aes(x = 1:125),fun=dexp,geom = "line",size=1,args = (mean=.1)) + labs( x = "Precipitation",
y = "",
title = "")+theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 300, rate = .09))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 400, rate = .09))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 400, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
data =  data.frame(x=rexp(n = 365, rate = .08))
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .07))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .06))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .09))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
#ggplot() + stat_function(aes(x = 1:20),fun=function(x){dexp( x,.65)})
ggplot() + stat_function(aes(x = 1:125),fun=dexp,geom = "line",size=1,args = (mean=.08)) + labs( x = "Precipitation",
y = "",
title = "")+theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(cowplot)
install.packages("cowplot")
library(cowplot)
library(cowplot)
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") +theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") #+theme_classic()
library(ggplot2)
library("ggthemes")
theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") #+theme_classic()
library(ggplot2)
library("ggthemes")
#theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") #+theme_classic()
library(ggplot2)
library("ggthemes")
#theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "") #+theme_classic()
library(ggplot2)
library("ggthemes")
#theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "")+theme_cowplot() #+theme_classic()
library(ggplot2)
library("ggthemes")
#theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "")+theme_cowplot() #+theme_classic()
#ggplot() + stat_function(aes(x = 1:20),fun=function(x){dexp( x,.65)})
ggplot() + stat_function(aes(x = 1:125),fun=dexp,geom = "line",size=1,args = (mean=.08)) + labs( x = "Precipitation",
y = "",
title = "") +theme_cowplot()
#+theme_classic()
library(cowplot)
z <- rexp(300,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(cowplot)
z <- rexp(600,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(cowplot)
z <- rexp(1200,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(cowplot)
z <- rexp(24000,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(cowplot)
z <- rexp(240000,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(cowplot)
z <- rexp(48000,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(cowplot)
z <- rexp(96000,rate = 0.09)
hist(z, prob = T, xlab = "Precipitation", ylab = "" , main = "")
curve(dexp(x, rate = 0.09), col = 2, lty = 2, lwd = 2, add = TRUE)
library(ggplot2)
library("ggthemes")
#theme_set(theme_bw())
data =  data.frame(x=rexp(n = 96000, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram()  # stat_bin/(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "")+theme_cowplot() #+theme_classic()
library(ggplot2)
library("ggthemes")
#theme_set(theme_bw())
data =  data.frame(x=rexp(n = 365, rate = .08))
m <- ggplot(data, aes(x=data$x))
m <-m + geom_histogram(bins = 8)  # stat_bin/(bins = 30)
m +  labs( x = "Precipitation",
y = "Count",
title = "")+theme_cowplot() #+theme_classic()
wd = "G:\\Dropbox (Personal)\\Research\\energyStudy\\solar17\\data\\original-data-and-metadata\\original-data\\cweeds"
setwd(wd)
filenames <- list.files( paste0(wd, "\\AB_CWEEDS"), full.names = TRUE)
filenames
write.csv(filenames, file = paste0(wd, "\\AB_CWEEDS\\AB_sitename.csv"))
head(filenames)
filenames[1]
str_split(filenames[1], "_")
library(stringr)
str_split(filenames[1], "_")
str_split(filenames[1], "_")[1]
str_split(filenames[1], "_")[[1]]
stationName = data.frame()
for(i in 1:length(filenames)){
stationName[i] = str_split(filenames[i], "_")[[1]]
}
stationName[i] = str_split(filenames[i], "_")
str_split(filenames, "_")
stationName =str_split(filenames, "_")
head(stationName)
df = as.data.frame(stationName)
str(stationName)
df <- data.frame(matrix(unlist(stationName), nrow=100,
byrow=T),stringsAsFactors=FALSE)
df = do.call(rbind.data.frame, stationName)
df
df[-1]
df = df[-1]
head(df)
names(df) = c("source", "province","name","number","year","T","N")
write.csv(df, file = paste0(wd, "\\AB_CWEEDS\\AB_sitename.csv"))
head(df)
stationWidth = 1+ c(23-1,24-24,29-25,30-30,37-31,38-38,45-39, 46-46,51-47,52-52,
58-53,59-59,65-60,66-66,69-67,70-70,73-71,74-74,76-75,
77-77,79-78)
library(readr)
station = read_fwf(
file= paste0(wd, "\\ABstation.txt"),
skip=1,
fwf_widths(stationWidth))
library(dplyr)
station = station %>% select_if(colSums(!is.na(.)) > 0)
nameStation = c("STATION","WBAN","RAD.CSN", "WX.CSN","LAT","LONG","MLONG","SUN", "RAD", "FY", "LY")
length(nameStation)
names(station) = nameStation
station
write.csv(station, paste0(wd, "\\ABstation_short.csv"))
head(df)
head(station)
str(df)
test =left_join(x=df, y=station,by = c("number"= "RAD.CSN") )
head(test)
test
df[-1,]
#wd = "G:\\Dropbox (Personal)\\Research\\energyStudy\\solar17\\data"
#setwd("~/Dropbox/energy/solar/model/data/solar/cweeds2016")
we = "~/Dropbox/energy/solar/model/data/so
lar/cweeds2016"
wd = "G:\\Dropbox (Personal)\\Research\\energyStudy\\solar17\\data\\original-data-and-metadata\\original-data\\cweeds"
setwd(wd)
filenames <- list.files( paste0(wd, "\\AB_CWEEDS"), full.names = TRUE)
library(stringr)
#https://stackoverflow.com/questions/4227223/r-list-to-data-frame
# do.call pass elements of your_list as arguments to rbind. It's equivalent of rbind(your_list[[1]], your_list[[2]], your_list[[3]], ....., your_list[[length of your_list]])
df = do.call(rbind.data.frame, stationName)
df = df[-1]
names(df) = c("source", "province","name","number","year","T","N")
write.csv(df, file = paste0(wd, "\\AB_CWEEDS\\AB_sitename.csv"))
cweedwidth
FormatEx2016 <- read_csv("G:/Dropbox (Personal)/Research/energyStudy/solar17/data/original-data-and-metadata/original-data/cweeds/cweedsFormatEx2016.csv",
col_names = FALSE)
nameCWEEDS = FormatEx2016[["X1"]]
cweedwidth2016 = FormatEx2016[["X2"]]
length(nameCWEEDS)
library(readr)
FormatEx2016 <- read_csv("G:/Dropbox (Personal)/Research/energyStudy/solar17/data/original-data-and-metadata/original-data/cweeds/cweedsFormatEx2016.csv",
col_names = FALSE)
nameCWEEDS = FormatEx2016[["X1"]]
cweedwidth2016 = FormatEx2016[["X2"]]
length(nameCWEEDS)
x <- read_fwf(
file=paste0(wd, "\\cweedsSample.txt"),
skip=1,
fwf_widths(cweedwidth2016))
names(x) = nameCWEEDS
head(x)
df(1.045,5,5)
df(1/1.045,5,5)
pf(1/1.045,5,5)
pf(1.045,5,5)
1-pf(1.045,5,5)
1-pf(1.045,5,15)
pf(1.045,5,15)
1-pf(1.045,5,5)
pf(1/1.045,5,5)
1-pf(1.045,5,15)
pf(1/1.045,5,15)
pf(1/1.045,6,6)
pf(1.045,6,6)
1-pf(1.045,6,6)
library(readr)
SolarLocationsWEEDS2011 <- read_csv("G:/Dropbox (UVic Economics)/energy/solar/model/data/solar/cweeds2016/SolarLocationsWEEDS2011.csv")
View(SolarLocationsWEEDS2011)
library(dplyr)
SolarLocationsWEEDS2011 %>% filter(chosen = 1)
SolarLocationsWEEDS2011 %>% filter(chosen == 1)
filenames
#wd = "G:\\Dropbox (Personal)\\Research\\energyStudy\\solar17\\data"
#setwd("~/Dropbox/energy/solar/model/data/solar/cweeds2016")
we = "~/Dropbox/energy/solar/model/data/so
lar/cweeds2016"
# cweeds data is too large for share in dropbox, so it is in personal dropbox
wd = "G:\\Dropbox (Personal)\\Research\\energyStudy\\solar17\\data\\original-data-and-metadata\\original-data\\cweeds"
setwd(wd)
filenames <- list.files( paste0(wd, "\\AB_CWEEDS"), full.names = TRUE)
library(stringr)
#https://stackoverflow.com/questions/4227223/r-list-to-data-frame
# do.call pass elements of your_list as arguments to rbind. It's equivalent of rbind(your_list[[1]], your_list[[2]], your_list[[3]], ....., your_list[[length of your_list]])
df = do.call(rbind.data.frame, stationName)
df = df[-1]
names(df) = c("source", "province","name","number","year","T","N")
write.csv(df, file = paste0(wd, "\\AB_CWEEDS\\AB_sitename.csv"))
str_split(filenames)
str_split(filenames, "_")
stationName = str_split(filenames, "_")
df = do.call(rbind.data.frame, stationName)
df = df[-1]
df
df = do.call(rbind.data.frame, stationName)
df
filenames <- list.files( paste0(wd, "\\AB_CWEEDS"), full.names = TRUE)
stationName = str_split(filenames, "_")
df = do.call(rbind.data.frame, stationName)
df
names(df) = c("filelocation","source", "province","name","number","year","T","N")
write.csv(df, file = paste0(wd, "\\AB_sitename.csv"))
df["filelocation"]
df %>% select(filelocation)
df[,"filelocation"]
df[,"filelocation"] = filenames
df
write.csv(df, file = paste0(wd, "\\AB_sitename.csv"))
SolarLocationsWEEDS2011 <- read_csv("G:/Dropbox (UVic Economics)/energy/solar/model/data/solar/cweeds2016/SolarLocationsWEEDS2011.csv")
SolarLocationsWEEDS2011 %>% filter(chosen == 1)
SolarLocationsWEEDS2011 <- read_csv("G:/Dropbox (UVic Economics)/energy/solar/model/data/solar/cweeds2016/SolarLocationsWEEDS2011.csv")
SolarLocationsWEEDS2011 %>% filter(chosen == 1)
chosenStations <- SolarLocationsWEEDS2011 %>% filter(chosen == 1)
chosenStations
cweedwidth2016
nameCWEEDS
wd
i=1
name = chosenStations[i,"name"]
name
solar_data <- read_fwf(
file = chosenStations[i,"filelocation"],
skip =1,
fwf_widths(cweedwidth2016)
)
chosenStations[i,"filelocation"]
file
filelocation = chosenStations[i,"filelocation"]
filelocation = chosenStations[i,"filelocation"]
G:\\Dropbox (Personal)\\Research\\energyStudy\\solar17\\data\\original-data-and-metadata\\original-data\\cweeds\\AB_CWEEDS/CAN_AB_CAMROSE_3011240_CWEEDS2011_T_N.WY3
filelocation
filenames
df
toString(chosenStations[i,"filelocation"])
for(i in length(chosenStations)){
name = chosenStations[i,"name"]
filelocation = toString(chosenStations[i,"filelocation"])
solar_data <- read_fwf(
file = filelocation,
skip =1,
fwf_widths(cweedwidth2016)
)
names(solar_data) = nameCWEEDS
write.csv(MEDICINE_HAT, file = paste0(wd, "\\chosen_stations\\",name,".csv"))
}
name = chosenStations[i,"name"]
filelocation = toString(chosenStations[i,"filelocation"])
solar_data <- read_fwf(
file = filelocation,
skip =1,
fwf_widths(cweedwidth2016)
)
filelocation
toString(chosenStations[i,"filelocation"])
i=1
chosenStations[i,"filelocation"]
toString(chosenStations[i,"filelocation"])
filelocation = toString(chosenStations[i,"filelocation"])
solar_data <- read_fwf(
file = filelocation,
skip =1,
fwf_widths(cweedwidth2016)
)
names(solar_data) = nameCWEEDS
write.csv(MEDICINE_HAT, file = paste0(wd, "\\chosen_stations\\",name,".csv"))
write.csv(solar_data, file = paste0(wd, "\\chosen_stations\\",name,".csv"))
length(chosenStations)
nrow(chosenStations)
name = chosenStations[i,"name"]
for(i in 2:nrow(chosenStations)){
name = chosenStations[i,"name"]
filelocation = toString(chosenStations[i,"filelocation"])
solar_data <- read_fwf(
file = filelocation,
skip =1,
fwf_widths(cweedwidth2016)
)
names(solar_data) = nameCWEEDS
write.csv(solar_data, file = paste0(wd, "\\chosen_stations\\",name,".csv"))
}
shiny::runApp('D:/onedrive/One drive/246/20171123/econ246l1')
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
install.packages(c("repr", "IRdisplay", "evaluate", "crayon", "pbdZMQ", "devtools", "uuid", "digest"))
devtools::install_github('IRkernel/IRkernel')
install.packages("digest")
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
library(DBI)
con <- dbConnect(odbc::odbc(), .connection_string = "Driver={SQL Server};")
install.packages("devtools")
install.packages("devtools")
library("devtools")
install_github(hemken/Statamarkdown)
backtick <- "`"
library(Statamarkdown)
library("devtools") # you may need to install devtools
install_github(hemken/Statamarkdown)
devtools::install_github("Hemken/Statamarkdown")
library(Statamarkdown)
backtick <- "`"
library(Statamarkdown)
stataexe <- find_stata()
knitr::opts_chunk$set(engine.path=stataexe)
install.packages("blogdown")
blogdown::install_hugo()
setwd("G:/project/project2/academic-kickstart")
blogdown::build_site()
blogdown::serve_site()
install.packages('later')
blogdown::serve_site()
ls()
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib="E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
install.packages(c("broom", "caTools", "devtools", "dplyr", "evaluate", "forecast", "foreign", "ggfortify", "ggplot2", "git2r", "glue", "haven", "httpuv", "IRdisplay", "MASS", "mgcv", "munsell", "pillar", "purrr", "Rcpp", "RcppArmadillo", "RCurl", "repr", "reprex", "rlang", "robustbase", "RUnit", "stringi", "stringr", "survival", "tidyr", "tinytex", "tseries", "utf8", "xfun", "xts", "zoo"), lib = "E:/Program Files (x86)/R-3.5.0/library")
blogdown::build_site()
install.packages("blogdown")
blogdown::install_hugo()
setwd("G:/project/project2/academic-kickstart")
blogdown::build_site()
blogdown::serve_site()
servr::daemon_stop("53991576")
cd themes/academic
blogdown::build_site()
blogdown::serve_site()
servr::daemon_stop("53994328")
blogdown::build_site()
blogdown::build_site()
